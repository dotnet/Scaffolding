{
  "Identifier": "dotnet-webapi",
  "Files": [
    {
      "FileName": "Startup.cs",
      "Options": [ "NonMinimalApp" ],
      "Methods": {
        "Configure": {
          "Parameters": [ "IApplicationBuilder", "IWebHostEnvironment" ],
          "CodeChanges": [
            {
              "InsertAfter": "IApplicationBuilder.UseRouting",
              "Block": "IApplicationBuilder.UseAuthentication()"
            }
          ]
        },
        "ConfigureServices": {
          "Parameters": [ "IServiceCollection" ],
          "CodeChanges": [
            {
              "Block": "IServiceCollection.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)"
            },
            {
              "Parent": "IServiceCollection.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)",
              "CodeChangeType": "MemberAccess",
              "Block": "AddMicrosoftIdentityWebApi(Configuration.GetSection(\"AzureAd\"));",
              "BlockB2C": "AddMicrosoftIdentityWebApi(Configuration.GetSection(\"AzureAdB2C\"))"
            }
          ]
        }
      },
      "Usings": [
        "Microsoft.AspNetCore.Authentication",
        "Microsoft.Identity.Web",
        "Microsoft.AspNetCore.Authentication.JwtBearer"
      ]
    },
    {
      "FileName": "Program.cs",
      "Options": [ "MinimalApp" ],
      "Usings": [
        "Microsoft.AspNetCore.Authentication",
        "Microsoft.AspNetCore.Authentication.JwtBearer",
        "Microsoft.Identity.Web"
      ],
      "Methods": {
        "Global": {
          "CodeChanges": [
            {
<<<<<<< HEAD
              "Block": "builder.Services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)",
              "InsertBefore": ["WebApplication.CreateBuilder.Services.AddControllers"],
              "CodeFormatting": {
                "Newline": true
              }
            },
            {
              "Block": "AddMicrosoftIdentityWebApi(builder.Configuration.GetSection(\"AzureAd\"))",
              "Parent": "AddAuthentication",
              "CodeChangeType": "MemberAccess",
              "CodeFormatting": {
                "Newline": true,
                "NumberOfSpaces": 4
              }
            },
            {
              "Block": "EnableTokenAcquisitionToCallDownstreamApi()",
              "Parent": "AddMicrosoftIdentityWebApi",
              "CodeChangeType": "MemberAccess",
              "Options": [ "MicrosoftGraph", "DownstreamApi" ],
=======
              "Block": "\nWebApplication.CreateBuilder.Services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)\n    .AddMicrosoftIdentityWebApi(builder.Configuration.GetSection(\"AzureAd\"));",
              "InsertBefore": [ "builder.Services.AddControllers()", "builder.Build()" ]
            },
            {
              "Parent": "AddMicrosoftIdentityWebApi",
              "Options": [ "MemberAccess", "MicrosoftGraph", "DownstreamApi" ],
              "Block": "EnableTokenAcquisitionToCallDownstreamApi()"
            },
            {
              "Parent": "EnableTokenAcquisitionToCallDownstreamApi",
              "Options": [ "MemberAccess", "MicrosoftGraph" ],
              "Block": "AddMicrosoftGraph(builder.Configuration.GetSection(\"MicrosoftGraph\"))",
>>>>>>> c9c71cf5 (Cherry picking main into release/6.0 (#1688))
              "CodeFormatting": {
                "Newline": true,
                "NumberOfSpaces": 8
              }
            },
            {
              "Block": "AddMicrosoftGraph(builder.Configuration.GetSection(\"MicrosoftGraph\"))\r\n            .AddInMemoryTokenCaches()",
              "Parent": "EnableTokenAcquisitionToCallDownstreamApi",
              "CodeChangeType": "MemberAccess",
              "Options": [ "MicrosoftGraph" ],
              "CodeFormatting": {
                "NumberOfSpaces": 12,
                "Newline": true
              }
            },
            {
              "Block": "AddDownstreamWebApi(\"DownstreamApi\",builder.Configuration.GetSection(\"DownstreamApi\"))\r\n            .AddInMemoryTokenCaches()",
              "Parent": "EnableTokenAcquisitionToCallDownstreamApi",
              "CodeChangeType": "MemberAccess",
              "Options": [ "DownstreamApi" ],
              "CodeFormatting": {
                "NumberOfSpaces": 12,
                "Newline": true
              }
            },
            {
              "Block": "app.UseAuthentication()",
              "InsertBefore": [ "app.UseAuthorization" ],
              "CodeFormatting": {
                "Newline": true
              }
            }
          ]
        }
      }
    },
    {
      "FileName": "WeatherForecastController.cs",
      "ClassAttributes": [
        {
          "Block":"Authorize",
          "Options": []
        },
        {
          "Block": "RequiredScope(RequiredScopesConfigurationKey = \"AzureAd:Scopes\")",
          "Options": []
        }
      ],
      "ClassProperties": [
        {
          "Block": "static readonly string[] scopeRequiredByApi = new string[] { \"access_as_user\" }",
          "Options": ["NonMinimalApp"]
        },
        {
          "Block": "private readonly GraphServiceClient _graphServiceClient",
          "Options": [ "MicrosoftGraph" ]
        },
        {
          "Block": "private readonly IDownstreamWebApi _downstreamWebApi",
          "Options": [ "DownstreamApi" ]
        }
      ],
      "Methods": {
        "Configure": {
          "Parameters": [ "IApplicationBuilder", "IWebHostEnvironment" ],
          "CodeChanges": [
            {
              "InsertAfter": "IApplicationBuilder.UseRouting",
              "Block": "IApplicationBuilder.UseAuthentication()"
            }
          ]
        },
        "WeatherForecastController": {
          "Parameters": [ "ILogger<WeatherForecastController>" ],
          "AddParameters" : [ 
            {
              "Block":"GraphServiceClient graphServiceClient",
              "Options": [ "MicrosoftGraph"]
            },
            {
              "Block":"IDownstreamWebApi downstreamWebApi",
              "Options": [ "DownstreamApi"]
            }
          ],
          "CodeChanges": [
            {
              "Block": "_graphServiceClient = graphServiceClient;",
              "Options": [ "MicrosoftGraph" ],
              "CodeFormatting": {
                "NumberOfSpaces": 12
              }
            },
            {
              "Block": "_downstreamWebApi = downstreamWebApi;",
              "Options": [ "DownstreamApi" ],
              "CodeFormatting": {
                "NumberOfSpaces": 12
              }
            }
          ]
        },
        "Get": {
          "Parameters": [ "IEnumerable<WeatherForecast>" ],
          "EditType": {
            "Block": "async Task<IEnumerable<WeatherForecast>>",
            "Options": [ "MicrosoftGraph", "DownstreamApi" ]
          },
          "CodeChanges": [
            {
              "Prepend": true,
              "Block": "var user = await _graphServiceClient.Me.Request().GetAsync();",
              "CodeFormatting": {
                "NumberOfSpaces": 12
              },
              "Options": [ "MicrosoftGraph" ]
            },
            {
<<<<<<< HEAD
              "Prepend": true,
=======
              "Append": true,
>>>>>>> c9c71cf5 (Cherry picking main into release/6.0 (#1688))
              "Block" : "using var response = await _downstreamWebApi.CallWebApiForUserAsync(\"DownstreamApi\").ConfigureAwait(false);",
              "CodeFormatting": {
                "NumberOfSpaces": 12
              },
              "Options" : [ "DownstreamApi"]
            },
            {
              "InsertAfter": "await _downstreamWebApi.CallWebApiForUserAsync",
<<<<<<< HEAD
              "Block": "\r\n            if (response.StatusCode == System.Net.HttpStatusCode.OK)\r\n            {\r\n                var apiResult = await response.Content.ReadAsStringAsync().ConfigureAwait(false);\r\n                // Do something\r\n            }\r\n            else\r\n            {\r\n                var error = await response.Content.ReadAsStringAsync().ConfigureAwait(false);\r\n                throw new HttpRequestException($\"Invalid status code in the HttpResponseMessage: {response.StatusCode}: {error}\");\r\n            }",
              "CodeFormatting": {
                "NumberOfSpaces": 12,
                "Newline": true
=======
              "Block": "\n\n            if (response.StatusCode == System.Net.HttpStatusCode.OK)\n            {\n                var apiResult = await response.Content.ReadAsStringAsync().ConfigureAwait(false);\n                // Do something\n            }\n            else\n            {\n                var error = await response.Content.ReadAsStringAsync().ConfigureAwait(false);\n                throw new HttpRequestException($\"Invalid status code in the HttpResponseMessage: {response.StatusCode}: {error}\");\n            }",
              "CodeFormatting": {
                "NumberOfSpaces": 12
>>>>>>> c9c71cf5 (Cherry picking main into release/6.0 (#1688))
              },
              "Options": [ "DownstreamApi" ]
            },
            {
<<<<<<< HEAD
              "Prepend": true,
              "Block": "HttpContext.VerifyUserHasAnyAcceptedScope(scopeRequiredByApi)",
=======
              "Append": true,
              "Block": "HttpContext.VerifyUserHasAnyAcceptedScope(scopeRequiredByApi);",
>>>>>>> c9c71cf5 (Cherry picking main into release/6.0 (#1688))
              "Options": [ "NonMinimalApp" ]
            }
          ]
        }
      },
      "Usings": [
        "Microsoft.AspNetCore.Authorization",
        "Microsoft.Identity.Web.Resource"
      ],
      "UsingsWithOptions": [
        {
          "Block": "Microsoft.Graph",
          "Options": [ "MicrosoftGraph" ]
        },
        {
          "Block": "Microsoft.Identity.Web",
          "Options": [ "DownstreamApi" ]
        }
      ]
    }
  ] 
}
