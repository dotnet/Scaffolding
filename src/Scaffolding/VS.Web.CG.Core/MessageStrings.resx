<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddDependency" xml:space="preserve">
    <value>Adding dependency '{0}' version '{1}'.</value>
  </data>
  <data name="CodeGeneratorInstanceCreationError" xml:space="preserve">
    <value>There was an error creating the code generator instance: [{0}]\r\n{1}</value>
  </data>
  <data name="CodeGeneratorNotFound" xml:space="preserve">
    <value>No code generators found with the name '{0}'</value>
  </data>
  <data name="DirectoryNotEmpty" xml:space="preserve">
    <value>The directory is not empty : '{0}'</value>
  </data>
  <data name="DnuNotFound" xml:space="preserve">
    <value>Could not find dotnet.exe on path. </value>
  </data>
  <data name="DotNetRestoreError" xml:space="preserve">
    <value>There was an error running 'dotnet restore' : '{0}'</value>
  </data>
  <data name="FileNotFound" xml:space="preserve">
    <value>The provided file '{0}' does not exist. This method expects a fully qualified path of an existing file.</value>
  </data>
  <data name="FileNotFoundInFolders" xml:space="preserve">
    <value>A file matching the name '{0}' was not found within any of the folders: [{1}]</value>
  </data>
  <data name="MethodNotFound" xml:space="preserve">
    <value>[{0}] method with a model parameter is not found in class: [{1}]</value>
  </data>
  <data name="ModelCreationFailed" xml:space="preserve">
    <value>There was an error attempting to create an instace of model for GenerateCode method: [{0}]</value>
  </data>
  <data name="MultipleCodeGeneratorsFound" xml:space="preserve">
    <value>Multiple code generators found matching the name '{0}'</value>
  </data>
  <data name="MultipleFilesFound" xml:space="preserve">
    <value>Multiple files with name '{0}' found within [{1}]</value>
  </data>
  <data name="MultipleMethodsFound" xml:space="preserve">
    <value>Multiple [{0}] methods with a model parameter are found in class: [{1}]</value>
  </data>
  <data name="NullParamError" xml:space="preserve">
    <value>Parameter '{0}' cannot be null or empty.</value>
  </data>
  <data name="PathNotFound" xml:space="preserve">
    <value>Could not find a part of the path '{0}'</value>
  </data>
  <data name="TemplateFileNotFound" xml:space="preserve">
    <value>Template file '{0}' not found within search paths [{1}]</value>
  </data>
  <data name="TemplateProcessingError" xml:space="preserve">
    <value>There was an error running the template at '{0}': [{1}]</value>
  </data>
  <data name="UnableToRunRestore" xml:space="preserve">
    <value>Unable to run restore.</value>
  </data>
  <data name="UnexpectedTypeLibraryForTemplates" xml:space="preserve">
    <value>Unexpected type of library information for template folders</value>
  </data>
</root>
