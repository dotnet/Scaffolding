{
  "Files": [
    {
      "FileName": "Program.cs",
      "Methods": {
        "Global": {
          "CodeChanges": [
            {
              "InsertAfter": "app.MapRazorPages();",
              "Block": "app.$(EndpointsMethodName)()",
              "InsertBefore": [ "app.Run();" ],
              "LeadingTrivia": {
                "Newline": true
              }
            }
          ]
        }
      }
    },
    {
      "FileName": "Program.cs",
      "Usings": [
        "Microsoft.EntityFrameworkCore"
      ], 
      "Options": [
        "EfScenario"
      ],
      "Methods": {
        "Global": {
          "CodeChanges": [
            {
              "InsertAfter": "WebApplication.CreateBuilder",
              "CheckBlock": "builder.Configuration.GetConnectionString",
              "Block": "\nvar connectionString = builder.Configuration.GetConnectionString(\"$(ConnectionStringName)\") ?? throw new InvalidOperationException(\"Connection string '$(ConnectionStringName)' not found.\")"
            },
            {
              "InsertAfter": "builder.Configuration.GetConnectionString",
              "CheckBlock": "builder.Services.AddDbContext",
              "Block": "builder.Services.AddDbContext<$(DbContextName)>(options => options.$(UseDbMethod))",
              "LeadingTrivia": {
                "Newline": true
              }
            }
          ]
        }
      }
    },
    {
      "FileName": "Program.cs",
      "Usings": [],
      "Options": [
        "OpenApi"
      ],
      "Methods": {
        "Global": {
          "CodeChanges": [
            {
              "InsertAfter": "WebApplication.CreateBuilder.Services.AddControllers();",
              "InsertBefore": [ "var app = builder.Build();" ],
              "Block": "WebApplication.CreateBuilder.Services.AddOpenApi()",
              "LeadingTrivia": {
                "Newline": true
              }
            },
            {
              "CheckBlock": "if (!app.Environment.IsDevelopment())",
              "Block": "if (app.Environment.IsDevelopment())\r\n{\r\n   app.MapOpenApi();\r\n}",
              "Options": [ "OpenApi" ],
              "InsertAfter": "var app = WebApplication.CreateBuilder.Build();",
              "InsertBefore": [ "app.UseHttpsRedirection();" ],
              "LeadingTrivia": {
                "Newline": true
              }
            }
          ]
        }
      }
    }
  ]
}
