<#@  template hostSpecific="true" linePragmas="false" #>
<#@  parameter type="Microsoft.DotNet.Tools.Scaffold.AspNet.Models.RazorPageModel" name="Model" #>
<#@  import namespace="System.Collections.Generic" #>
<#@  import namespace="System.Text" #>
<#@  import namespace="System.Linq" #>
<#
    string modelName = Model.ModelInfo.ModelTypeName;
    string modelNamespace = Model.ModelInfo.ModelNamespace;
    string modelFullName = string.IsNullOrEmpty(modelNamespace) ? modelName : $"{modelNamespace}.{modelName}";
    var entityProperties =  Model.ModelInfo.ModelProperties
        .Where(x => !x.Name.Equals(Model.ModelInfo.PrimaryKeyName, StringComparison.OrdinalIgnoreCase)).ToList();
    string primaryKeyName = Model.ModelInfo.PrimaryKeyName;
    string pageModelFullName = string.IsNullOrEmpty(Model.RazorPageNamespace) ? "DetailsModel" : $"{Model.RazorPageNamespace}.DetailsModel";
#>
@page
@model <#= pageModelFullName #>

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4><#= modelName #></h4>
    <hr />
    <dl class="row">
<#
foreach (var property in entityProperties)
{
    string modelPropertyName = property.Name;
#>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.<#= modelName #>.<#= modelPropertyName #>)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.<#= modelName #>.<#= modelPropertyName #>)
        </dd>
<#
}
#>
    </dl>
</div>
<div>
    <a asp-page="./Edit" asp-route-id="@Model.<#= modelName #>.<#= primaryKeyName #>">Edit</a> |
    <a asp-page="./Index">Back to List</a>
</div>
