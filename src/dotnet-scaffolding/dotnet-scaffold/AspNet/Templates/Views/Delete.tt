<#@  template hostSpecific="true" linePragmas="false" #>
<#@  parameter type="Microsoft.DotNet.Tools.Scaffold.AspNet.Models.ViewModel" name="Model" #>
<#@  import namespace="System.Collections.Generic" #>
<#@  import namespace="System.Text" #>
<#@  import namespace="System.Linq" #>
<#
    string modelName = Model.ModelInfo.ModelTypeName;
    string modelNamespace = Model.ModelInfo.ModelNamespace;
    string modelFullName = string.IsNullOrEmpty(modelNamespace) ? modelName : $"{modelNamespace}.{modelName}";
    var entityProperties =  Model.ModelInfo.ModelProperties
        .Where(x => !x.Name.Equals(Model.ModelInfo.PrimaryKeyName, StringComparison.OrdinalIgnoreCase)).ToList();
    string primaryKeyName = Model.ModelInfo.PrimaryKeyName;
#>
@model <#= modelFullName #>

@{
    ViewData["Title"] = "Delete";
}

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4><#= modelFullName #></h4>
    <hr />
<#
foreach (var property in entityProperties)
{
    string modelPropertyName = property.Name;
#>
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.<#= modelPropertyName #>)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.<#= modelPropertyName #>)
        </dd>
    </dl>
<#
}
#>
    <form asp-action="Delete">
        <input type="hidden" asp-for="<#= primaryKeyName #>" />
        <input type="submit" value="Delete" class="btn btn-danger" /> |
        <a asp-action="Index">Back to List</a>
    </form>
</div>
