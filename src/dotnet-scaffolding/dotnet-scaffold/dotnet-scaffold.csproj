<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <Description>Scaffolding tool for .NET projects. </Description>
    <TargetFramework>net8.0</TargetFramework>
    <OutputType>exe</OutputType>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <PackAsTool>true</PackAsTool>
    <PackageTags>dotnet;scaffold</PackageTags>
    <PackageId>Microsoft.dotnet-scaffold</PackageId>
    <RootNamespace>Microsoft.DotNet.Tools.Scaffold</RootNamespace>
    <NoWarn>$(NoWarn);8002</NoWarn>
  </PropertyGroup>
  <ItemGroup>
    <!--
      TODO: Find a better place for these files to live that is shared between .Core and dotnet-scaffold. Linking them like this is temporary
      to get around the fact that dotnet-scaffold doesn't (and likely won't) have a dependency on .Core.
    -->
    <Compile Include="$(RepoRoot)src\dotnet-scaffolding\Microsoft.DotNet.Scaffolding.Core\Logging\CleanConsoleFormatter.cs" Link="Logging\CleanConsoleFormatter.cs" />
    <Compile Include="$(RepoRoot)src\dotnet-scaffolding\Microsoft.DotNet.Scaffolding.Core\Logging\CleanConsoleFormatterOptions.cs" Link="Logging\CleanConsoleFormatterOptions.cs" />
    <Compile Include="$(RepoRoot)src\dotnet-scaffolding\Microsoft.DotNet.Scaffolding.Core\Logging\ConsoleLoggerExtensions.cs" Link="Logging\ConsoleLoggerExtensions.cs" />
    <Compile Include="$(RepoRoot)src\dotnet-scaffolding\Microsoft.DotNet.Scaffolding.Core\ComponentModel\Shared\*.cs">
      <Link>ComponentModel\%(Filename)%(Extension)</Link>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Spectre.Console.Flow" />
    <PackageReference Include="Spectre.Console" />
    <PackageReference Include="Spectre.Console.Cli" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" />
    <PackageReference Include="Microsoft.Extensions.Logging.Console" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="$(RepoRoot)src\dotnet-scaffolding\Microsoft.DotNet.Scaffolding.Helpers\Microsoft.DotNet.Scaffolding.Helpers.csproj" />
  </ItemGroup>

</Project>
